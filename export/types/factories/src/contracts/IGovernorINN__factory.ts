/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IGovernorINN,
  IGovernorINNInterface,
} from "../../../src/contracts/IGovernorINN";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validatorEOA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOffer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startupName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "sharedStake",
        type: "uint16",
      },
    ],
    name: "ExitInvestmentProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
    ],
    name: "FreezeInvestmentProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "startupEOA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOffer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "startupName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "sharedStake",
        type: "uint16",
      },
    ],
    name: "NewInvestmentProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validatorEOA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "validatorName",
        type: "string",
      },
    ],
    name: "NewValidatorProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
    ],
    name: "UnfreezeInvestmentProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IGovernorINN.VoteType",
        name: "vote",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "enum IGovernorINN.VoteType",
        name: "vote",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offchainID",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "enum IGovernorINN.ProposalType",
        name: "propsalType",
        type: "uint8",
      },
      {
        internalType: "enum IGovernorINN.ActionType",
        name: "actionType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "offchainID",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "enum IGovernorINN.ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "enum IGovernorINN.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IGovernorINN.ProposalRequest",
        name: "proposalRequest",
        type: "tuple",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernorINN.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IGovernorINN__factory {
  static readonly abi = _abi;
  static createInterface(): IGovernorINNInterface {
    return new utils.Interface(_abi) as IGovernorINNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGovernorINN {
    return new Contract(address, _abi, signerOrProvider) as IGovernorINN;
  }
}
